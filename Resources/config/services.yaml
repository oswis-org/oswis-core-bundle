# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'cs'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #    Zakjakub\OswisCoreBundle\:
    #        resource: '../../*'
    #        exclude: '../../{DependencyInjection,Entity,Migrations,Repository,Filter,Tests,Kernel.php}'
    #        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #    Zakjakub\OswisCoreBundle\Filter\SearchFilter:
    #        class: Zakjakub\OswisCoreBundle\Filter\SearchFilter
    #        autowire: true
    #        tags: [ { name: 'api_platform.filter', id: 'search' } ]
    #        public: true

    zakjakub_oswis_core.search_filter:
        class: Zakjakub\OswisCoreBundle\Filter\SearchFilter
        autowire: true
        tags: [ { name: 'api_platform.filter', id: 'search' } ]
        public: true

    Zakjakub\OswisCoreBundle\Filter\SearchFilter:
        alias: zakjakub_oswis_core.search_filter
        autowire: true
        public: true


    Zakjakub\OswisCoreBundle\Manager\:
        resource: '../../Manager/*'
        public: true

    Zakjakub\OswisCoreBundle\EventSubscriber\:
        resource: '../../EventSubscriber/*'
        tags: [ { name: 'kernel.view'} ]
        # arguments:
        #   ['@security.user_password_encoder.generic', '@doctrine.orm.entity_manager.abstract', '@swiftmailer.mailer.abstract', '@monolog.logger_prototype', '@twig', '@security.token_storage']
        public: true

    Zakjakub\OswisCoreBundle\Security\AppUserProvider:
        class: Zakjakub\OswisCoreBundle\Security\AppUserProvider
        autowire: true
        public: true
        arguments:
          ['@doctrine.orm.entity_manager.abstract']

    Zakjakub\OswisCoreBundle\Security\:
        resource: '../../Security/*'
        public: true

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
        public: true
    gedmo.listener.blameable:
        class: Gedmo\Blameable\BlameableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
        public: true
    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
        public: true
    gedmo.listener.iptraceable:
        class: Gedmo\IpTraceable\IpTraceableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
        public: true
